<form id="form">
  <div class="mb-3">
    <label for="firstName" class="form-label">First Name</label>
    <input type="text" class="form-control" id="firstName" placeholder="Enter first name" maxlength="30" required>
  </div>

  <div class="mb-3">
    <label for="lastName" class="form-label">Last Name</label>
    <input type="text" class="form-control" id="lastName" placeholder="Enter last name" maxlength="30" required>
  </div>

  <div class="mb-3">
    <label for="nickName" class="form-label">Nick Name</label>
    <input type="text" class="form-control" id="nickName" placeholder="Enter nickname" maxlength="30" required>
  </div>

  <div class="mb-3">
    <label for="email" class="form-label">Email</label>
    <input type="email" class="form-control" id="email" placeholder="Enter email" required>
  </div>

  <div class="mb-3">
    <label for="phone" class="form-label">Phone</label>
    <input type="tel" class="form-control" id="phone" placeholder="Enter phone number" required>
  </div>

  <div class="mb-3">
    <label for="password" class="form-label">Password</label>
    <input type="password" class="form-control" id="password" placeholder="Enter password" minlength="6" required>
  </div>

  <div class="mb-3">
    <label for="info" class="form-label">Info</label>
    <textarea class="form-control" id="info" placeholder="Enter additional information"></textarea>
  </div>

  <div class="mb-3">
    <label for="position" class="form-label">Position</label>
    <input type="text" class="form-control" id="position" placeholder="Enter position" required>
  </div>

  <div class="mb-3">
    <label for="photo" class="form-label">Photo URL</label>
    <input type="url" class="form-control" id="photo" placeholder="Enter photo URL">
  </div>

  <div class="form-check mb-3">
    <input class="form-check-input" type="checkbox" id="isExpert">
    <label class="form-check-label" for="isExpert">Is Expert</label>
  </div>

  <button type="submit" class="btn btn-primary" id="btn">Add Admin</button>
</form>


<script>
  let form = document.getElementById("form");
let accessToken = localStorage.getItem("accessToken");

if (!accessToken) {
   window.location.replace("/login");
}

form.addEventListener("submit", async (e) => {
  e.preventDefault();

  let first_name = document.getElementById("firstName").value;
  let last_name = document.getElementById("lastName").value;
  let nick_name = document.getElementById("nickName").value;
  let email = document.getElementById("email").value;
  let phone = document.getElementById("phone").value;
  let password = document.getElementById("password").value;
  let info = document.getElementById("info").value;
  let position = document.getElementById("position").value;
  let is_expert = document.getElementById("isExpert").checked;

  const formData = {
    first_name,
    last_name,
    nick_name,
    email,
    phone,
    password,
    info,
    position,
    is_expert,
  };

  const accessExpTime = getTokenExpiration(accessToken);

  if (accessExpTime) {
    const currentTime = new Date();
    if (currentTime > accessExpTime) {
      accessToken = await refreshTokenFunc();
      console.log("new access token : ", accessToken);
    }
  }

  const data = await addAuthor(formData);

  if (data) {
    return alert(data);
  }

  window.location.replace("/author");
});

function getTokenExpiration(token) {
  const decodedToken = JSON.parse(atob(token.split(".")[1]));
  if (decodedToken.exp) {
    return new Date(decodedToken.exp * 1000);
  }
  return null;
}

async function refreshTokenFunc() {
  try {
    const res = await fetch("http://localhost:3000/api/author/refreshtoken", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
    });
    const data = await res.json();

    if (data.message && data.message == "jwt expired") {
      localStorage.removeItem("accessToken");
      return window.location.replace("/login");
    }

    console.log(data);
    localStorage.setItem("accessToken", data.accessToken);
    return data.accessToken;
  } catch (error) {
    console.log("Error");
  }
}

async function addAuthor(formData) {
  const accessToken = localStorage.getItem("accessToken");
  try {
    const res = await fetch("http://localhost:3000/api/author", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${accessToken}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify(formData),
    });
    if (!res.ok) {
      const data = await res.json();
      return data.error || "Error occurred while adding author";
    }
  } catch (error) {
    return "Error occurred while adding author";
  }
}

</script>